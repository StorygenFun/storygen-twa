const translation = {
  HomePage: {
    title: "Let's write a new story!",
    cta: 'Start writing',
  },
  StoryPage: {
    stories: 'Stories',
    yourStories: 'Your Stories',
    storiesLoading: 'We upload your stories, please, wait a moment...',
    createNewStory: 'Create new story',
    removeStory: 'Are you sure to delete this story?',
    storyName: 'Story name',
    defaultTitle: 'New Story',
    languageAnswer: 'Answer in English',
    prompt: 'Describe your story',
    simpleMode: 'Simple generation mode',
    textModel: 'Model for generation of text',
    imageModel: 'Model for generation of cover',
    writerStyle: "Writer's style",
    writers: {
      own: 'Your own style',
      murakami: 'Haruki Murakami',
      orwell: 'George Orwell',
      kafka: 'Franz Kafka',
      nabokov: 'Vladimir Nabokov',
      king: 'Stephen King',
      liuCixin: 'Liu Cixin',
    },
    ownStyle: 'Your own style',
    genre: 'Genre',
    genres: {
      fantasy: 'Fantasy',
      scienceFiction: 'Science Fiction',
      literaryFiction: 'Literary Fiction',
      humor: 'Humor',
      mystery: 'Mystery',
      horror: 'Horror',
      thriller: 'Thriller',
      detective: 'Detective',
      romance: 'Romance',
      historicalFiction: 'Historical Fiction',
      memoir: 'Memoir',
    },
    audience: 'Audience',
    audiences: {
      children: 'Children',
      teenagers: 'Teenagers',
      youngAdults: 'Young Adults',
      adults: 'Adults',
      middleGrade: 'Middle Grade',
      seniors: 'Seniors',
    },
    numberOfScenes: 'Number of scenes',
    paymentModalTitle: 'Payment for generating a new story',
    paymentModalText:
      'The cost is based on the number of scenes and the generation of the cover for the story.',
    paymentModalCost: 'Total cost of story generation',
    paymentMessageDanger: 'Payment failed, please try again.',
    generateStoryFor: 'Generate a story for {{cost}}',
    generateScenes: 'Generate scenes',
    generatedBrief: 'Brief description',
    regenerate: 'Regenerate with new data',
    generateFullStory: 'Generate full story',
    generatingScene: 'Generating scenes',
    removeScenes: 'Remove Scenes',
    removeScenesQuestion: 'Are you sure to delete this scenes?',
    generateMetaData: 'Generate Meta Data',
    generatingMetaData: 'Generating Meta Data',
    removeMetaData: 'Remove Meta Data',
    generateWith: 'with',
    generateCover: 'Generate Cover',
  },
  header: {
    projects: 'Stories',
  },
  prompts: {
    writerVariant: {
      named: 'You are a popular author who writes books in the style of {{writer}}.',
      unnamed: 'You are a popular modern writer.',
    },
    genreVariant: {
      named: 'Write a story in the {{genre}} genre.',
      unnamed: 'Choose the most suitable genre based on the specified writer and prompt text.',
    },
    audience: 'The target audience of this story is {{audience}}.',
    storyGenerator: {
      task: 'Your task is to create a list of {{num}} episodes based on the user prompt.',
      main: `Format the response in a single JSON, with an array of objects "scene" with the fields "t" (title) and "d" (description), i.e. [scene, scene, ... scene].
Do not number the episodes.'
The size of each description is about {{size}} characters.
Send a complete list of all {{num}} episodes without abbreviations or omissions.
There should be nothing in the response except this JSON.`,
    },
    sceneTitlePrefix: 'Scene',
    sceneWrite: 'Write episode number {{num}} in as much detail as possible',
    sceneGenerator: `The response should contain only the episode and nothing more. The size of the episode is about {{size}} characters. Do not number the episodes.`,
    scenePrompt: `Write a separate episode of the story based on this brief description:\n\n{{context}}`,
    sceneSummaryGenerator: `Write a summary of the story from 300 to 500 characters. The response should contain only the summary and nothing more.`,
    storySummaryGenerator: `I have this story written:
{{context}}
Generate JSON in the following format: an object with the fields "summary", "coverText", "description", "storyTitles",
where summary is a summary about of the story, from 300 to 500 characters;
coverText - compose a prompt for generating an cover for this story. It should include description of the main location of events for this story, a brief description of the main characters without mentioning their names, without any text on the cover, about 300 characters;
description - a short description of the story;
storyTitles - an array of 10 story titles (example: ["name1", "name2", ... "name10"]).
`,
    sceneVolume: 'Write a text of {{from}}-{{to}} characters.',
  },
  notFound: {
    stories: {
      title: 'There are no stories here yet',
      subTitle: 'But you can create your first story right now!',
      cta: 'Start writing',
    },
    story: {
      title: 'Story not found',
      subTitle: 'See your other stories',
      cta: 'Go to stories',
    },
  },
  actions: {
    ok: 'OK',
    cancel: 'Cancel',
    yes: 'Yes',
    no: 'No',
    close: 'Close',
    pay: 'Pay',
    publish: 'Publish',
    remove: 'Remove',
    clearDatabase: 'Clear Database',
    tryAgain: 'Try again',
    areYouSure: 'Are you sure?',
    disconnect: 'Disconnect',
  },
  progress: {
    start: 'Start writing your new story',
    briefInProgress: 'Generating a brief description',
    briefDone: 'Brief description is generated',
    scenesInProgress: 'Generating scenes: {{num}} from {{total}} are ready',
    scenesDone: 'The scenes are ready',
    metaInProgress: 'Generating additional data',
    metaDone: 'Additional data is generated',
    coverInProgress: 'Generating a cover',
    coverDone: 'Cover is generated',
    completed: 'Your story is written',
  },
  modal: {
    profileInfo: 'Profile info',
    yourAddress: 'Your wallet address',
    yourLanguage: 'Your language',
    debugMode: 'Debug mode',
    havePromoCode: 'Have you any Promo Code?',
    wrongAnswerFormat: 'Format of the answer is wrong',
    canConnectAgain: 'Anyway, you can always connect again',
    dangerZone: 'Danger zone',
    removeBrief: 'Remove brief',
    removeScenes: 'Remove scenes',
    removeMeta: 'Remove meta',
    removeCover: 'Remove cover',
    closeAfterAction: 'Close after an action',
  },
  notices: {
    connectRequiredTitle: 'You are not authorized',
    connectRequiredText: 'To generate story, you must log in with TON Connect.',
    createStory: 'Create your new story',
    deleteDB: 'Are you sure to clear your local database?',
    deleteDBDescription: 'Once the database is deleted, you cannot undo this action',
  },
}

export default translation
